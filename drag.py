import numpy as np

## written by Dennis van Dommelen, 2014

def drag(alpha):
    ## syntax: Cd=drag(alpha)
    ## Drag curve of applied blade aerofoil
    ##  
    ## Output:
    ##    Cd: drag coefficient [-],
    ## Input:
    ##    alpha: angle of attack [degrees],

    ##Define new arrays for the angle and dragcoefficient
    angle = []
    cef =[]

    ## values in table format; 1st column alpha, 2nd column Cd
    
    tabel=[
    [-178.0,   0.0266],
    [-173.0,   0.0513],
    [-168.0,   0.1368],
    [-163.0,   0.2546],
    [-158.0,   0.3940],
    [-152.0,   0.5814],
    [-148.0,   0.7146],
    [-142.0,   0.9036],
    [-138.0,   1.0332],
    [-132.0,   1.2078],
    [-128.0,   1.3316],
    [-123.0,   1.4602],
    [-117.0,   1.5714],
    [-109.0,   1.6864],
    [ -97.0,   1.8003],
    [ -88.0,   1.8174],
    [ -80.0,   1.7452],
    [ -73.0,   1.6625],
    [ -66.0,   1.5486],
    [ -58.0,   1.3543],
    [ -48.0,   1.1106],
    [ -43.0,   0.9647],
    [ -35.0,   0.7420],
    [ -29.0,   0.5672],
    [ -25.0,   0.4427],
    [ -20.0,   0.2983],
    [ -17.0,   0.2070],
    [ -15.0,   0.1340],
    [ -12.0,   0.0657],
    [ -10.0,   0.0383],
    [  -8.0,   0.0161],
    [  -6.0,   0.0094],
    [  -4.0,   0.0082],
    [  -2.0,   0.0076],
    [   0.0,   0.0077],
    [   2.0,   0.0078],
    [   4.0,   0.0084],
    [   6.0,   0.0092],
    [   8.0,   0.0131],
    [  10.0,   0.0221],
    [  12.0,   0.0350],
    [  14.0,   0.0550],
    [  16.0,   0.0850],
    [  18.0,   0.1280],
    [  20.0,   0.1950],
    [  22.0,   0.2600],
    [  25.0,   0.3700],
    [  28.0,   0.4900],
    [  32.0,   0.6900],
    [  37.0,   0.9348],
    [  42.0,   1.1514],
    [  47.0,   1.2993],
    [  52.0,   1.4393],
    [  57.0,   1.5507],
    [  62.0,   1.6600],
    [  68.0,   1.7684],
    [  77.0,   1.8630],
    [  87.0,   1.9186],
    [  94.0,   1.9049],
    [  97.0,   1.8828],
    [ 104.0,   1.7984],
    [ 112.0,   1.6853],
    [ 121.0,   1.5020],
    [ 128.0,   1.3281],
    [ 132.0,   1.2179],
    [ 137.0,   1.0649],
    [ 142.0,   0.9033],
    [ 147.0,   0.6956],
    [ 152.0,   0.5003],
    [ 157.0,   0.3474],
    [ 162.0,   0.2261],
    [ 167.0,   0.1083],
    [ 172.0,   0.0304],
    [ 177.0,   0.0221]];
    
    ##Append the angle and coefficients to the correct lists, such that it becomes an 1D matrix
    
    for i in range(len(tabel)):
        angle.append(tabel[i][0])
        cef.append(tabel[i][1])

    ## linear interpolation
    Cd=np.interp(alpha,angle,cef)
    return Cd
